#!/bin/sh
# file: screen-display-regions-helper 
# author: Artur Skonecki
# website http://adb.cba.pl
# description: helper program, formats output, gets input

#trap cleanup 15

cleanup()
{
    echo "exiting..." 
    #screen -Q @number|tr -c "[:digit:]" " "| tr -d "[:blank:]"| xargs -I {} screen -X at {} kill
    exit 0
}

#trap 'echo omg interruput;' INT 


echo ""
if [ "$2" = "0" ]
then
    #toilet --gay -W "> $2 <"
    screen-session-primer -n "x  $2  x"
    /bin/echo -e "timeout: 4 s\n\
\n\
goto:\t   [number]\n\
goto:\t ' [number]<ENTER>\n\
swap:\t s [number]\n\
rotate left:\t  l\n\
rotate right:\t  r\n\
"
    
else
    #toilet --metal -W "  $2"
    screen-session-primer -n "  $2"
fi
stty cbreak -echo; KEY=$(dd bs=1 count=1 2>/dev/null); stty -cbreak echo

if [ "$KEY" = "s" ]         # swap
then
    #toilet -W "swap"
    echo "SWAP"
    stty cbreak -echo; value=$(dd bs=1 count=1 2>/dev/null); stty -cbreak echo
    if [ "$value" = "'" ]       # and goto
    then
        toilet -W "and goto"
        stty cbreak -echo; value=$(dd bs=1 count=1 2>/dev/null); stty -cbreak echo
        echo "s'$value" > $1
    else
        echo "s$value" > $1
    fi

elif [ "$KEY" = "'" ]       # goto
then
    #toilet -W "goto"
    echo "GOTO"
    read value
    echo $KEY$value > $1
elif [ "$KEY" = "r" ]       # rotate right
then 
    echo "$KEY" > $1  
elif [ "$value" = "l" ]     # rotate left
then
    echo "$KEY" > $1  
else                        # default goto
    echo $KEY > $1
fi


echo $1 | python -c "import sys; s=sys.stdin.read().rsplit('-',1)[1]; print s"| xargs kill -s USR1 
stty cbreak -echo; KEY=$(dd bs=1 count=1 2>/dev/null); stty -cbreak echo
exit 0
