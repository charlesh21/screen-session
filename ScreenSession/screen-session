#!/bin/sh
# file: screen-session
# author: Artur Skonecki
# website: http://adb.cba.pl
# description: screen-session.py script starter
# it is necessary to run screen-session.py embedded in other screen session to be able to run it from saved/loaded screen session

# Absolute path to this script. /home/user/bin/foo.sh
SCRIPT=$(readlink -f $0)
# Absolute path this script is in. /home/user/bin
SCRIPTPATH=`dirname $SCRIPT`

cd $SCRIPTPATH

# parse command line arguments
waitfor=0
nonest=0
logpipe=1
while getopts ":wnp:": OPT; do
    case "$OPT" in
    w)  echo 'wait'
        waitfor=1
        ;;
    n)  echo 'nonest'
        logpipe=0
        ;;
    p)  echo 'pipe'
        logpipe=1
        ;;
    esac
done


screen -X sessionname
rawargument=`screen -Q @lastmsg`

testargument=`screen -Q @tty`

scsfiledir="/tmp/screen-sessions-$USER"
scsfile="$scsfiledir/___scspipe-$$"

argument0=""
argument1=""

if [ `echo ${testargument} | grep -c "^/dev"` -eq 1 ]; then
    echo "--- running inside patched Screen session"
    argument1="--current-session "`echo $rawargument | python -c "import sys; print(sys.stdin.read().split('\'',1)[1].rsplit('\'',1)[0])"`
else
    echo "--- not running inside patched Screen, this session cannot be saved properly"
fi

if [ $logpipe -eq 1 ]; then
    argument0="-p $scsfile"
    if [ ! -d "$scsfiledir" ]; then
        mkdir $scsfiledir
    fi
    if [ -d "$scsfile" ]; then
        rm $scsfile
    fi
    mkfifo $scsfile

    screen -m -d -c /dev/null python ./screen-session.py $argument0 $argument1 $* 
    
    cat $scsfile
    rm $scsfile
else
    python ./screen-session.py $argument0 $argument1 $*
fi


if [ $waitfor -eq 1 ]; then
    echo 'Press any key...'
    stty cbreak -echo; KEY=$(dd bs=1 count=1 2>/dev/null); stty -cbreak echo
fi
