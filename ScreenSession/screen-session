#!/bin/sh
# -*- coding: utf-8 -*-
#
#    screen-session : screen-session tools starter
#
#    Copyright (C) 2010-2011 Artur Skonecki
#
#    Authors: Artur Skonecki http://github.com/skoneka
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

if [ -z "$SCREENBIN" ]; then
    export SCREENBIN=`which screen`
fi

if [ -z "$PYTHONBIN" ]; then
    export PYTHONBIN=`which python`
fi

# faster, but less portable
#SCRIPTPATH=$(dirname $(realpath $0))
SCRIPTPATH=$($PYTHONBIN -c "import os;print (os.path.split(os.path.realpath(\"$0\"))[0])")

export PYTHONPATH=$SCRIPTPATH

ret=0

if [ $# -eq 0 ]; then
    $PYTHONBIN $SCRIPTPATH/help.py
    exit 0;
fi

mode=$1
shift 1

if [ $# -ge 1 ]; then
    if [ $1 = "--help" -o $1 = "-h" ]; then
        $PYTHONBIN $SCRIPTPATH/help.py $mode
        exit $?;
    fi
fi

umask 0077

scsfiledir="/tmp/screen-session-$USER"
if [ ! -d "$scsfiledir" ]; then
    mkdir -p $scsfiledir
fi

if [ "$session" = '' ]; then
    if [ "$STY" = '' ]; then
        session='__no__session__'
    else
        session=$STY
    fi
fi

if [ $mode = "save" -o $mode = "load" -o $mode = "ls" -o $mode = "other" ]; then
    $PYTHONBIN $SCRIPTPATH/screen_saver.py $mode --session "$session" "$@"
    ret=$?
else
    AUTOSEARCH='2'
    LAYOUT_CHECKPOINT='0'
    DIR=''
    TITLE_WIDTH='11'
    cOPT='0'
    lOPT='0'
    wOPT='0'
    SHOWPID='1'
    REVERSE='0'
    SORT='0'
    shiftcount=0
    bSession=0

    while getopts ":Pprslca:wt:S:d:": OPT; do
        case "$OPT" in
        S)  session="$OPTARG"
            bSession=1
            ;;
        t)  TITLE_WIDTH="$OPTARG"
            ;;
        P)  SHOWPID="0"
            ;;
        p)  LAYOUT_CHECKPOINT="1"
            ;;
        r)  REVERSE="1"
            ;;
        s)  SORT="1"
            ;;
        l)  lOPT="1"
            ;;
        w)  wOPT="1"
            ;;
        c)  cOPT="1"
            ;;
        d)  DIR="$OPTARG"
            ;;
        a)  AUTOSEARCH="$OPTARG"
            ;;
        esac
    done
    shift $(($OPTIND - 1))
    
    if [ "$session" = "." ]; then
        # TODO: fix / rewrite sessionname.py
        session=`$PYTHONBIN $SCRIPTPATH/sessionname.py "$session"`
    fi

    if [ $mode = "name" -o $mode = "n" ]; then
        if [ $bSession -eq 0 ]; then
            session=`$PYTHONBIN $SCRIPTPATH/sessionname.py`
        fi
        $PYTHONBIN $SCRIPTPATH/sessionname.py "$session" "$@"
        ret=$?
    elif [ $mode = "--version" -o $mode = "-v" ]; then
        $PYTHONBIN $SCRIPTPATH/help.py --version
        ret=$?
    elif [ $mode = "--help" -o $mode = "-h" -o $mode = "help" -o $mode = "h" ]; then
        $PYTHONBIN $SCRIPTPATH/help.py "$@"
        ret=$?
    else
        $SCREENBIN -S "$session" -X msgminwait 0
        if [ $mode = "manager" -o $mode = "m" ]; then
            $PYTHONBIN $SCRIPTPATH/manager.py pn "psession=$session" "$@"
        #elif [ $mode = "manager-remote" -o $mode = "mr" ]; then
        #    $PYTHONBIN $SCRIPTPATH/manager.py pr psession=$session "$@"
        #elif [ $mode = "grab" ]; then
        #    sh $SCRIPTPATH/screen-session-grab "$@"
        elif [ "$session" != "__no__session__" ]; then
            if [ $mode = "group" -o $mode = "g" ]; then
                sh $SCRIPTPATH/win-to-group "$session" "$@"
                ret=$?
            elif [ $mode = "regions" -o $mode = "r" ]; then
                $PYTHONBIN $SCRIPTPATH/regions.py "$session" "$@"
                ret=$?
            elif [ $mode = "nest-layout" -o $mode = "nl" -o $mode = "nest" ]; then
                if [ $# -eq 0 ]; then
                    $PYTHONBIN $SCRIPTPATH/help.py $mode
                else
                    $PYTHONBIN $SCRIPTPATH/nest_layout.py "$session" "$@"
                fi
                ret=$?
            elif [ $mode = "new-window" -o $mode = "new" -o $mode = "nw" ]; then
                $PYTHONBIN $SCRIPTPATH/new-window.py $$ "$session" "$DIR" "$@"
                ret=$?
            elif [ $mode = "dump" -o $mode = "d" ]; then
                $PYTHONBIN $SCRIPTPATH/dump.py "$session" $SHOWPID $REVERSE $SORT "$@"
                ret=$?
            elif [ $mode = "find-pid" -o $mode = "fp" ]; then
                $PYTHONBIN $SCRIPTPATH/find_pid.py "$session" "$@"
                ret=$?
            #elif [ $mode = "find-file" -o $mode = "ff" ]; then
            #    $PYTHONBIN $SCRIPTPATH/find_file.py "$session" "$@"
            #    ret=$?
            elif [ $mode = "kill" -o $mode = "K" ]; then
                # screen-session kill [signal=TERM] [win=current]
                $PYTHONBIN $SCRIPTPATH/kill.py "$session" "$@"
                ret=$?
            elif [ $mode = "kill-zombie" -o $mode = "kz" ]; then
                $PYTHONBIN $SCRIPTPATH/kill-zombie.py "$session" "$@"
                ret=$?
            elif [ $mode = "kill-group" -o $mode = "kg" ]; then
                if [ $# -eq 0 ]; then
                    $PYTHONBIN $SCRIPTPATH/help.py $mode
                else
                    $PYTHONBIN $SCRIPTPATH/kill-group.py "$session" "$@"
                fi
                ret=$?
            elif [ $mode = "layoutlist" -o $mode = "ll" ]; then
                $PYTHONBIN $SCRIPTPATH/layoutlist.py "$session" $lOPT $wOPT $cOPT $TITLE_WIDTH "$AUTOSEARCH" "$LAYOUT_CHECKPOINT" "$@"
                ret=$?
            elif [ $mode = "layout-checkpoint" -o $mode = "lc" ]; then
                $PYTHONBIN $SCRIPTPATH/layout.py checkpoint "$session" "$@"
                ret=$?
            elif [ $mode = "layout-undo" -o $mode = "lu" ]; then
                $PYTHONBIN $SCRIPTPATH/layout.py undo "$session" "$@"
                ret=$?
            elif [ $mode = "layout-redo" -o $mode = "lr" ]; then
                $PYTHONBIN $SCRIPTPATH/layout.py redo "$session" "$@"
                ret=$?
            elif [ $mode = "layout-history" -o $mode = "lh" ]; then
                $PYTHONBIN $SCRIPTPATH/layout.py history "$session" "$@"
                ret=$?
            elif [ $mode = "renumber" ]; then
                $PYTHONBIN $SCRIPTPATH/renumber.py "$session" "$@"
                ret=$?
            elif [ $mode = "subwindows" -o $mode = "sw" ]; then
                $PYTHONBIN $SCRIPTPATH/subwindows.py "$session" "$@"
                ret=$?
            #elif [ $mode = "sort" ]; then
            #    $PYTHONBIN $SCRIPTPATH/sort.py "$session" "$@"
            else
                echo "No such mode: $mode"
                ret=1
            fi
        else
          ret=1
        fi
    fi
fi

exit $ret
